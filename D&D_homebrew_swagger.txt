openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/maartenbaeten509/DungeonsAndDorks/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: http://127.0.0.1:5000/
info:
  description: Dungeons&Dorks API is an api which can be used to store homebrew items such as spells or magic swords.
  version: "1.0.0"
  title: Dungeons&Dorks Homebrew API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /searchspell:
    get:
      tags:
        - developers
      summary: returns a list of all the spells in the database
      operationId: searchInventory
      description: |
        Returns a list of all the spells in the database xod
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: bad input parameter
          
  /showHomebrewSpell/{name}:
    get:
      tags:
        - developers
      summary: Returns a specific spell and is searched by name
      operationId: showHomebrewSpell
      description: |
        By passing a name of a spell, the service will provide you of the homebrew spell with that name.
      parameters:
        - in: path
          name: name
          description: Pass a name of a homebrew spell
          required: true
          schema:
            type: string
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: bad input parameter
          
  /savespell/{name}/{castingTime}/{level}/{copmonents}/{materials}/{description}/{school}/{range}/{ritual}/{availability}:    
    post:
      tags:
        - admins
      summary: Saves a homebrew spell in the database
      operationId: addInventory
      description: |
        By passing the correct parameters for creating a spell, the spell will be created in the database
      parameters:
        - in: path
          name: name
          description: the name of the spell
          required: true
          schema:
            type: string
        - in: path
          name: castingTime
          description: the casting time of the spell
          required: true
          schema:
            type: string
        - in: path
          name: level
          description: the level of the spell
          required: true
          schema:
            type: string
        - in: path
          name: copmonents
          description: the components of the spell
          required: true
          schema:
            type: string
        - in: path
          name: materials
          description: the materials of the spell
          required: true
          schema:
            type: string
        - in: path
          name: description
          description: the description of the spell
          required: true
          schema:
            type: string
        - in: path
          name: school
          description: the school of the spell
          required: true
          schema:
            type: string
        - in: path
          name: range
          description: the range of the spell
          required: true
          schema:
            type: string
        - in: path
          name: ritual
          description: the ritual of the spell
          required: true
          schema:
            type: string
        - in: path
          name: availability
          description: the availability of the spell
          required: true
          schema:
            type: string    
      responses:
        '201':
          description: spell created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing spell already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: ''
        description: Inventory item to add
  /searchitem:
    get:
      tags:
        - developers
      summary: returns a list of all the items in the database
      operationId: searchItem
      description: |
        Returns a list of all the items in the database xod
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: bad input parameter
          
  /showHomebrewItem/{name}:
    get:
      tags:
        - developers
      summary: Returns a specific item and is searched by name
      operationId: showHomebrewItem
      description: |
        By passing a name of an item, the service will provide you of the homebrew item with that name.
      parameters:
        - in: path
          name: name
          description: Pass a name of a homebrew item
          required: true
          schema:
            type: string
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ''
        '400':
          description: bad input parameter
          
  /saveitem/{name}/{price}/{description}:
    post:
      tags:
        - admins
      summary: Saves a homebrew spell in the database
      operationId: saveItem
      description: |
        By passing the correct parameters for creating a spell, the spell will be created in the database
      parameters:
        - in: path
          name: name
          description: the name of the item
          required: true
          schema:
            type: string
        - in: path
          name: price
          description: the price of the item
          required: true
          schema:
            type: string
        - in: path
          name: description
          description: the description of the item
          required: true
          schema:
            type: string
      responses:
        '201':
          description: spell created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing spell already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: ''
        description: Inventory item to add